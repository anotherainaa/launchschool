// How many direct and indirect child nodes does each parent node 
// — starting with the element with an id of 1 
// — have in the DOM generated by the following HTML:

// HTML - 2 direct child nodes
// Head - 0 
// Body - 1 direct child nodes


// Div id 1- 9 direct child nodes, 12 indirect?
// h1 id 2- 2 direct, 1 indirect?
// em id 3 - 1 direct, no indirect

// p id 4- 3 direct, 1 indirect?
// span id 5 - 1 direct, no indirect

// a id 6 - 1 direct, 1 indirect
// strong id 7 - 1 direct, no indirect

// div id 8 - 1 direct, 2 indirect
// p id 9 - 1 direct, 1 indirect
// a id 10 - 1 direct, no indirect

// Further exploration

// childNodes(1);

function walk(node, callback) {
  callback(node);

  for (let i = 0; i < node.childNodes.length; i += 1) {
    walk(node.childNodes[i], callback);
  }
}

function childNodes(id) {
  let [direct, indirect] = [[], []];

  let element = document.getElementById(String(id));

  // iterate through each element in the node
  // if the current node is include in the childNodes of the current element, else add to indirec

  walk(element, (node) => {
    if ([].slice.call(element.childNodes).includes(node)) {
      direct.push(node);
    } else if (element !== node) {
      indirect.push(node);
    }
  })

  return [direct, indirect];
}